{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "@id": "http://blagomeni.com/schemas/entity.json",
    "title": "Entity",
    "type": "object",
    "$defs": {
        "BaseClassEnum": {
            "enum": [
                "Entity",
                "AggregateRoot",
                "AuditedEntity",
                "AuditedAggregateRoot",
                "FullAuditedEntity",
                "FullAuditedAggregateRoot"
            ],
            "title": "BaseClassEnum",
            "type": "string"
        },
        "NavigationConnection": {
            "additionalProperties": false,
            "properties": {
                "Name": {
                    "description": "The name of the connection, which typically represents the relationship.",
                    "minLength": 1,
                    "title": "Name",
                    "type": "string"
                },
                "DisplayProperty": {
                    "description": "The name of the property that should be displayed for the connection in the UI.",
                    "minLength": 1,
                    "title": "DisplayProperty",
                    "type": "string"
                },
                "Namespace": {
                    "description": "The namespace of the connected entity. Do not use C# reserved keywords.",
                    "minLength": 1,
                    "title": "Namespace",
                    "type": "string"
                },
                "EntityName": {
                    "description": "The name of the connected entity.",
                    "minLength": 1,
                    "title": "EntityName",
                    "type": "string"
                },
                "EntitySetName": {
                    "description": "The name of the set that contains multiple instances of the connected entity.",
                    "minLength": 1,
                    "title": "EntitySetName",
                    "type": "string"
                },
                "DtoNamespace": {
                    "description": "The namespace of the DTO for the connected entity. Do not use C# reserved keywords.",
                    "minLength": 1,
                    "title": "DtoNamespace",
                    "type": "string"
                },
                "DtoEntityName": {
                    "description": "The name of the DTO for the connected entity.",
                    "minLength": 1,
                    "title": "DtoEntityName",
                    "type": "string"
                },
                "Type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RelatedTypeEnum"
                        }
                    ],
                    "default": "String",
                    "description": "The type of the identifier for the related entity.",
                    "title": "Type"
                }
            },
            "required": [
                "Name",
                "DisplayProperty",
                "Namespace",
                "EntityName",
                "EntitySetName",
                "DtoNamespace",
                "DtoEntityName"
            ],
            "title": "NavigationConnection",
            "type": "object"
        },
        "NavigationProperty": {
            "additionalProperties": false,
            "properties": {
                "EntityNameWithDuplicationNumber": {
                    "description": "The name of the related entity, with a number appended if there is more than one relationship with the same entity.",
                    "minLength": 1,
                    "title": "EntityNameWithDuplicationNumber",
                    "type": "string"
                },
                "EntitySetNameWithDuplicationNumber": {
                    "description": "The name of the set containing multiple instances of the related entity.",
                    "minLength": 1,
                    "title": "EntitySetNameWithDuplicationNumber",
                    "type": "string"
                },
                "ReferencePropertyName": {
                    "description": "The name of the property in this entity that holds the reference to the related entity.",
                    "minLength": 1,
                    "title": "ReferencePropertyName",
                    "type": "string"
                },
                "UiPickType": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/UiPickTypeEnum"
                        }
                    ],
                    "default": "Modal",
                    "description": "The type of UI control that should be used to pick the related entity.",
                    "title": "UiPickType"
                },
                "IsRequired": {
                    "default": false,
                    "description": "Indicates whether a relationship to the related entity is required.",
                    "title": "IsRequired",
                    "type": "boolean"
                },
                "Name": {
                    "description": "The name of the identifier property for this navigation property.",
                    "minLength": 1,
                    "title": "Name",
                    "type": "string"
                },
                "DisplayProperty": {
                    "description": "The name of the property of the related entity that should be displayed in the UI.",
                    "minLength": 1,
                    "title": "DisplayProperty",
                    "type": "string"
                },
                "Namespace": {
                    "description": "The namespace of the related entity. Do not use C# reserved keywords.",
                    "minLength": 1,
                    "title": "Namespace",
                    "type": "string"
                },
                "EntityName": {
                    "description": "The name of the related entity. Do not use C# reserved keywords.",
                    "minLength": 1,
                    "title": "EntityName",
                    "type": "string"
                },
                "EntitySetName": {
                    "description": "The name of the set that contains multiple instances of the related entity.",
                    "minLength": 1,
                    "title": "EntitySetName",
                    "type": "string"
                },
                "DtoNamespace": {
                    "description": "The namespace of the Data Transfer Object (DTO) for the related entity. Do not use C# reserved keywords.",
                    "minLength": 1,
                    "title": "DtoNamespace",
                    "type": "string"
                },
                "DtoEntityName": {
                    "description": "The name of the DTO for the related entity.",
                    "minLength": 1,
                    "title": "DtoEntityName",
                    "type": "string"
                },
                "Type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/RelatedTypeEnum"
                        }
                    ],
                    "default": "String",
                    "description": "The type of the identifier for the related entity.",
                    "title": "Type"
                }
            },
            "required": [
                "EntityNameWithDuplicationNumber",
                "EntitySetNameWithDuplicationNumber",
                "ReferencePropertyName",
                "Name",
                "DisplayProperty",
                "Namespace",
                "EntityName",
                "EntitySetName",
                "DtoNamespace",
                "DtoEntityName"
            ],
            "title": "NavigationProperty",
            "type": "object"
        },
        "PrimaryKeyTypeEnum": {
            "enum": [
                "int",
                "long",
                "Guid",
                "string"
            ],
            "title": "PrimaryKeyTypeEnum",
            "type": "string"
        },
        "Property": {
            "additionalProperties": false,
            "properties": {
                "Id": {
                    "description": "The unique identifier for the property, represented as a UUID. This field should be generated by the client.",
                    "format": "uuid",
                    "title": "Id",
                    "type": "string"
                },
                "Name": {
                    "description": "The name of the property. This should be unique within the entity.",
                    "minLength": 1,
                    "title": "Name",
                    "type": "string"
                },
                "Type": {
                    "allOf": [
                        {
                            "$ref": "#/$defs/TypeEnum"
                        }
                    ],
                    "description": "The data type of the property",
                    "title": "Type"
                },
                "EnumType": {
                    "default": "",
                    "description": "The type of the enumeration, if the property is an enum. It should be empty for non-enum properties.",
                    "title": "EnumType",
                    "type": "string"
                },
                "EnumNamespace": {
                    "default": "",
                    "description": "The namespace where the enumeration is defined, if applicable. Do not use C# reserved keywords.",
                    "title": "EnumNamespace",
                    "type": "string"
                },
                "EnumAngularImport": {
                    "default": "shared/enums",
                    "description": "The Angular import path for the enumeration, if the property is an enum.",
                    "title": "EnumAngularImport",
                    "type": "string"
                },
                "EnumFilePath": {
                    "default": null,
                    "description": "The file path to the enumeration definition, if the property is an enum.",
                    "title": "EnumFilePath",
                    "type": "string"
                },
                "DefaultValue": {
                    "default": null,
                    "description": "The default value of the property if not otherwise set.",
                    "title": "DefaultValue",
                    "type": "string"
                },
                "IsNullable": {
                    "default": false,
                    "description": "Indicates whether the property can be null.",
                    "title": "IsNullable",
                    "type": "boolean"
                },
                "IsRequired": {
                    "default": false,
                    "description": "Indicates whether the property is required for the entity.",
                    "title": "IsRequired",
                    "type": "boolean"
                },
                "AllowEmptyStrings": {
                    "default": false,
                    "description": "Determines if empty strings are allowed for string type properties.",
                    "title": "AllowEmptyStrings",
                    "type": "boolean"
                },
                "IsTextArea": {
                    "default": false,
                    "description": "Indicates if the property should be represented as a text area in the UI, typically used for longer text strings.",
                    "title": "IsTextArea",
                    "type": "boolean"
                },
                "MinLength": {
                    "default": null,
                    "description": "The minimum length for the property value, applicable to string types.",
                    "title": "MinLength",
                    "type": "integer"
                },
                "MaxLength": {
                    "default": null,
                    "description": "The maximum length for the property value, applicable to string types.",
                    "title": "MaxLength",
                    "type": "integer"
                },
                "SortOrder": {
                    "default": 0,
                    "description": "Specifies the default sort order of the property when listed.",
                    "title": "SortOrder",
                    "type": "integer"
                },
                "SortType": {
                    "default": 0,
                    "description": "Determines how the property is sorted. A value of 0 typically represents default or no sorting.",
                    "title": "SortType",
                    "type": "integer"
                },
                "Regex": {
                    "default": "",
                    "description": "A regular expression pattern that the property value must match.",
                    "title": "Regex",
                    "type": "string"
                },
                "EmailValidation": {
                    "default": false,
                    "description": "Indicates if the property value should be validated as an email address.",
                    "title": "EmailValidation",
                    "type": "boolean"
                },
                "ShowOnList": {
                    "default": true,
                    "description": "Indicates if the property should be displayed in list views.",
                    "title": "ShowOnList",
                    "type": "boolean"
                },
                "ShowOnCreateModal": {
                    "default": true,
                    "description": "Indicates if the property should be included in create modals/forms.",
                    "title": "ShowOnCreateModal",
                    "type": "boolean"
                },
                "ShowOnEditModal": {
                    "default": true,
                    "description": "Indicates if the property should be included in edit modals/forms.",
                    "title": "ShowOnEditModal",
                    "type": "boolean"
                },
                "ReadonlyOnEditModal": {
                    "default": false,
                    "description": "Indicates if the property should be read-only in edit modals/forms.",
                    "title": "ReadonlyOnEditModal",
                    "type": "boolean"
                },
                "EnumValues": {
                    "default": null,
                    "description": "An object representing the possible values of an enumeration, if the property is an enum.",
                    "title": "EnumValues",
                    "type": "string"
                },
                "IsSelected": {
                    "default": true,
                    "description": "Indicates whether the property is selected by default in the UI.",
                    "title": "IsSelected",
                    "type": "boolean"
                },
                "OrdinalIndex": {
                    "default": 0,
                    "description": "The index that can be used for ordering properties ordinally.",
                    "title": "OrdinalIndex",
                    "type": "integer"
                }
            },
            "required": [
                "Name",
                "Type"
            ],
            "title": "Property",
            "type": "object"
        },
        "RelatedTypeEnum": {
            "enum": [
                "int",
                "long",
                "Guid",
                "string"
            ],
            "title": "RelatedTypeEnum",
            "type": "string"
        },
        "TypeEnum": {
            "enum": [
                "bool",
                "byte",
                "char",
                "DateTime",
                "decimal",
                "double",
                "enum",
                "float",
                "Guid",
                "int",
                "long",
                "sbyte",
                "short",
                "string",
                "uint",
                "ulong",
                "ushort"
            ],
            "title": "TypeEnum",
            "type": "string"
        },
        "UiPickTypeEnum": {
            "enum": [
                "Modal",
                "Dropdown",
                "Typeahead"
            ],
            "title": "UiPickTypeEnum",
            "type": "string"
        }
    },
    "additionalProperties": false,
    "description": "This is the Entity info",
    "properties": {
        "Id": {
            "description": "The unique identifier for the property, represented as a UUID. This field should be generated by the client.",
            "format": "uuid",
            "title": "Id",
            "type": "string"
        },
        "Name": {
            "description": "Entity name will be used as class name of your entity. Do not use C# reserved keywords.",
            "minLength": 1,
            "title": "Name",
            "type": "string"
        },
        "OriginalName": {
            "description": "Original Entity name will be used as class name of your entity.",
            "minLength": 1,
            "title": "OriginalName",
            "type": "string"
        },
        "NamePlural": {
            "description": "Plural name will be used as collection names and folder names. Do not use C# reserved keywords.",
            "minLength": 1,
            "title": "NamePlural",
            "type": "string"
        },
        "DatabaseTableName": {
            "description": "For relational databases it will be used as database table name. For NoSQL databases it will be used as collection name. Do not use C# reserved keywords.",
            "minLength": 1,
            "title": "DatabaseTableName",
            "type": "string"
        },
        "Namespace": {
            "description": "Will be used as namespace - e.g., Book entity's namespace will be Acme.Bookstore.Books. Do not use C# reserved keywords.",
            "minLength": 1,
            "title": "Namespace",
            "type": "string"
        },
        "BaseClass": {
            "allOf": [
                {
                    "$ref": "#/$defs/BaseClassEnum"
                }
            ],
            "default": "FullAuditedAggregateRoot",
            "description": "ABP Framework's base class to derive this entity.",
            "title": "BaseClass"
        },
        "MenuIcon": {
            "default": "file-alt",
            "description": "Menu icon will be the entity's font awesome icon.",
            "minLength": 1,
            "title": "MenuIcon",
            "type": "string"
        },
        "PrimaryKeyType": {
            "allOf": [
                {
                    "$ref": "#/$defs/PrimaryKeyTypeEnum"
                }
            ],
            "default": "String",
            "description": "Will be used as the entity's primary key data type. Guid is recommended.",
            "title": "PrimaryKeyType"
        },
        "PreserveCustomCode": {
            "default": true,
            "description": "If selected, it will not override the custom code blocks in your entity during regeneration.",
            "title": "PreserveCustomCode",
            "type": "boolean"
        },
        "IsMultiTenant": {
            "default": false,
            "description": "If selected, the entity will be multi-tenant, isolating data between tenants.",
            "title": "IsMultiTenant",
            "type": "boolean"
        },
        "CheckConcurrency": {
            "default": true,
            "description": "If selected, concurrency check will be enabled for this entity.",
            "title": "CheckConcurrency",
            "type": "boolean"
        },
        "ShouldCreateUserInterface": {
            "default": true,
            "description": "If selected, a user interface will be generated for managing this entity.",
            "title": "ShouldCreateUserInterface",
            "type": "boolean"
        },
        "ShouldCreateBackend": {
            "default": true,
            "description": "If selected, the backend services will be generated for this entity.",
            "title": "ShouldCreateBackend",
            "type": "boolean"
        },
        "ShouldExportExcel": {
            "default": true,
            "description": "If selected, functionality for exporting entity data to Excel will be generated.",
            "title": "ShouldExportExcel",
            "type": "boolean"
        },
        "ShouldAddMigration": {
            "default": true,
            "description": "If selected, a new database migration will be added for this entity.",
            "title": "ShouldAddMigration",
            "type": "boolean"
        },
        "ShouldUpdateDatabase": {
            "default": true,
            "description": "If selected, the database schema will be updated to include this entity.",
            "title": "ShouldUpdateDatabase",
            "type": "boolean"
        },
        "CreateTests": {
            "default": true,
            "description": "If selected, unit and integration tests will be created for this entity.",
            "title": "CreateTests",
            "type": "boolean"
        },
        "Properties": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/Property"
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "default": [],
            "description": "An array of Property objects, each representing a property of the entity.",
            "title": "Properties"
        },
        "NavigationProperties": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/NavigationProperty"
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "default": [],
            "description": "An array of objects that define the navigation properties for the entity. Navigation properties represent relationships between different entities.",
            "title": "NavigationProperties"
        },
        "NavigationConnections": {
            "anyOf": [
                {
                    "items": {
                        "$ref": "#/$defs/NavigationConnection"
                    },
                    "type": "array"
                },
                {
                    "type": "null"
                }
            ],
            "default": [],
            "description": "An array of objects that define the connections for many-to-many relationships between entities.",
            "title": "NavigationConnections"
        },
        "PhysicalFileName": {
            "description": "File name of the JSON serialization of an entity.",
            "minLength": 1,
            "title": "PhysicalFileName",
            "type": "string"
        }
    },
    "required": [
        "Name",
        "OriginalName",
        "NamePlural",
        "DatabaseTableName",
        "Namespace",
        "PhysicalFileName"
    ]
}
